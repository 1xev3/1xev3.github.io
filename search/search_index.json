{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>print(\"hello world\")\n</code></pre>"},{"location":"esclib/about/","title":"About","text":""},{"location":"esclib/about/#links","title":"Links","text":"<p> Steam</p>"},{"location":"esclib/basics/creating_addon/","title":"Addon meta","text":""},{"location":"esclib/basics/creating_addon/#creating-new-addon","title":"Creating new addon","text":"\ud83d\udfe7\ud83d\udfe6 meta.lua<pre><code>your_name = your_name or {} -- create global table with your addon\n\nyour_name.addon = esclib:Addon(\"YOUR_ADDON_UID\")\nyour_name.addon:SetName(\"YOUR_ADDON_NAME\") --visible name\nyour_name.addon:SetBranch(\"YOUR_BRANCH_NAME\") --(f.e main or dev)\nyour_name.addon:SetVersion(0.1) --float or string\nyour_name.addon:SetDescription(\"Chat for Gmod\")\n</code></pre>"},{"location":"esclib/basics/creating_addon/#themes","title":"Themes","text":"\ud83d\udfe7 theme.lua<pre><code>local skin = {}\nskin.name = \"Blackout\" --theme name\nskin.color = Color(13,13,13) --theme color in settings menu\nskin.colors = {}\nskin.colors.main = {\n    bg = Color(26, 27, 30, 250),\n    bg2 = Color(14, 17, 14),\n\n    button = Color(1, 10, 25),\n    button_hover = Color(20, 30, 45),\n    accent = Color(153,0,255),\n    scrollbar = Color(57, 57, 59),\n    text_entry = Color(14, 17, 14),\n\n    text = Color(255,255,255),\n    text_gray = Color(160,160,160),\n    text_selection = Color(92, 79, 238),\n}\n\nyour_name.addon:RegisterSkin(\"blackout\", skin)\n</code></pre> <p>Setting default skin</p> <pre><code>your_name.addon:SetDefaultSkin(\"blackout\")\n</code></pre>"},{"location":"esclib/basics/creating_addon/#languages","title":"Languages","text":"\ud83d\udfe7\ud83d\udfe6 languages.lua<pre><code>local langs = {\n    [\"en\"] = {\n        __name__ = \"English\", --name in game\n        __code__ = \"US\", --Language code: https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\n\n        text_example = \"Text example\",\n    },\n    [\"ru\"] = {\n        __name__ = \"Russian\",\n        __code__ = \"RU\",\n\n        text_example = \"\u041f\u0440\u0438\u043c\u0435\u0440 \u0442\u0435\u043a\u0441\u0442\u0430\",\n    }\n}\n\nyour_name.addon:RegisterLanguages(langs)\n\n-- if GetConVar(\"gmod_language\") not in languages table, sets this language\nyour_name.addon:SetDefaultLanguage(\"en\")\n</code></pre> <p>To get var, simple use:</p> <pre><code>your_name.addon:Translate(\"text_example\")\n</code></pre>"},{"location":"esclib/basics/creating_addon/#settings","title":"Settings","text":""},{"location":"esclib/basics/creating_addon/#var-types","title":"Var types","text":"Type Description <code>bool</code> Simple true/false clickable button <code>numslider</code> Numeric slider <code>float</code> Same as numslider but different look <code>choicelist</code> Select from list"},{"location":"esclib/basics/creating_addon/#example","title":"Example","text":"\ud83d\udfe7\ud83d\udfe6 ingame_config.lua<pre><code>local settings = esclib:InitSettings(\"echat\")\n\n--tab creating\nlocal tab = settings:AddTab(\"modules\") --uid\ntab:SetNameTranslateKey(\"tab_modules\") --key in language file\ntab:SetPosition(1) --postion\n\n--adding vars\nlocal var = tab:AddVar(\"module_hud_leftbot\", \"bool\")\nvar:SetNameTranslateKey(\"s_mainhud_name\") --key in language file\nvar:SetValue(true)\n\n--Animation time slider\nlocal var = tab:AddVar(\"animtime\", \"numslider\")\nvar:SetNameTranslateKey(\"s_animspeed_name\")\nvar:SetValue(0.2)\nvar:SetMin(0.01)\nvar:SetMax(3)\nvar:SetDecimals(2)\nvar:SetStep(0.1)\n\nsettings:End()\n</code></pre>"},{"location":"esclib/basics/font_creation/","title":"Fonts","text":""},{"location":"esclib/basics/font_creation/#set-current-font-name","title":"Set current font name","text":"<pre><code>esclib:SetFontName(string)\n</code></pre>"},{"location":"esclib/basics/font_creation/#select-font-from-system","title":"Select font from system:","text":"<pre><code>esclib:SetFont(string) --font name in system\n</code></pre>"},{"location":"esclib/basics/font_creation/#create-new-font","title":"Create new font","text":"<pre><code>esclib:Font(int size, int weight)\n</code></pre>"},{"location":"esclib/basics/font_creation/#returns","title":"Returns:","text":"<ul> <li>string fontname</li> </ul>"},{"location":"esclib/basics/font_creation/#example","title":"Example","text":"fonts.lua<pre><code>esclib:SetFontName(\"esclib\") --font name\nesclib:SetFont(\"Amsterdam\")\nesclib:Font(30,500) --es_esclib_30_500\nesclib:Font(26,500)\nesclib:Font(24,500)\nesclib:Font(22,500)\nesclib:Font(20,500)\nesclib:Font(18,500)\nesclib:Font(16,500)\nesclib:Font(10,500)\n</code></pre>"},{"location":"esclib/basics/loader/","title":"Using esclib loader","text":""},{"location":"esclib/basics/loader/#an-example-of-one-of-my-addons","title":"An example of one of my addons","text":"<pre><code>echat = echat or {} -- initialize\nechat.Materials = echat.Materials or {}\n\nlocal function loader()\n    print(\"[echat loader]\")\n    --Using esclib loader system\n    esclib.loader:New(\"echat\",\"echat/\",function(load)\n        --fonts used in addon\n        load:Resource(\"resource/fonts/inter_regular.ttf\")\n        load:Resource(\"resource/fonts/robotomono_regular.ttf\")\n\n        load:MaterialFolder(\"materials/echat\",false,true)\n        table.Merge(echat.Materials, load.Materials)\n\n        --CONFIGS\n        load:Shared(\"config/meta.lua\") -- creating addon instance\n        load:Shared(\"config/config.lua\")\n        load:Shared(\"config/ingame_config.lua\")\n        load:Client(\"config/themes.lua\")\n        load:Client(\"config/languages.lua\")\n\n        --VGUI\n        load:ClientFolder(\"vgui\")\n\n        --MAIN FILES\n        load:Shared(\"core/tools/fonts.lua\")\n        load:Client(\"core/tools/module_loader.lua\")\n        load:Shared(\"core/tools/parsers_core.lua\")\n        load:Client(\"core/tools/auto_complete.lua\")\n        load:Server(\"core/tools/server_funcs.lua\")\n\n        load:Shared(\"core/parsers.lua\")\n        load:Client(\"core/complete_helpers.lua\")\n\n        --load all files from modules folder\n        load:SharedFolder(\"core/modules\")\n\n        --Main app\n        load:Client(\"core/__core__.lua\")\n\n    end)\nend\n\n--lua refresh compat\nif esclib &amp;&amp; esclib.loader then\n    if esclib.loader:IsLoaded(\"echat\") then\n        loader()\n    end\nend\n\n--adding hook to watch\nhook.Add(\"esclib_loaded\", \"echat_load\", function()\n    loader()\nend)\n</code></pre>"},{"location":"esclib/funcs/draw/arc/","title":"esclib.draw:Arc","text":"<p>\ud83d\udfe7 Client</p> <pre><code>function esclib.draw:Arc(cx,cy,radius,thickness,startang,endang,roughness,color,bClockwise)\n</code></pre> <p>Vertices are created at each rendering frame</p> <p>If the number of vertices is large, I do not recommend to use this function in drawing functions.</p>"},{"location":"esclib/funcs/draw/arc/#arguments","title":"Arguments","text":"<ol> <li>number center x</li> <li>number center y</li> <li>number arc radius</li> <li>number thickness</li> <li>number start angle</li> <li>number end angle</li> <li>number roughness</li> <li>number color</li> <li>bool clockwise?</li> </ol>"},{"location":"esclib/funcs/draw/draw_circle_mat/","title":"esclib.draw:Circle","text":"<p>\ud83d\udfe7 Client</p> <pre><code>function esclib.draw:Circle(x,y,r,col)\n</code></pre> <p>This function utilizes esclib's built-in material to make the circle smoother and consume fewer resources.</p>"},{"location":"esclib/funcs/draw/draw_circle_mat/#arguments","title":"Arguments","text":"<ol> <li>number x</li> <li>number y</li> <li>number radius</li> <li>color circle color</li> </ol>"},{"location":"esclib/funcs/draw/draw_poly_circle/","title":"esclib.draw:PolyCircle","text":"<p>\ud83d\udfe7 Client</p> <pre><code>function esclib.draw:PolyCircle(x, y, r, col, v)\n</code></pre> <p>Vertices are created at each rendering frame</p> <p>If the number of vertices is large, I do not recommend to use this function in drawing functions.</p>"},{"location":"esclib/funcs/draw/draw_poly_circle/#arguments","title":"Arguments","text":"<ol> <li>number x</li> <li>number y</li> <li>number radius</li> <li>color circle color</li> <li>number number of vertices</li> </ol>"},{"location":"esclib/funcs/draw/gen_circle/","title":"esclib.draw:GenCircle","text":"<p>\ud83d\udfe7 Client</p> <pre><code>function esclib.draw:GenCircle(x,y,r,v)\n</code></pre>"},{"location":"esclib/funcs/draw/gen_circle/#arguments","title":"Arguments","text":"<ol> <li>number x</li> <li>number y</li> <li>number radius</li> <li>number number of vertices</li> </ol>"},{"location":"esclib/funcs/draw/gen_circle/#returns","title":"Returns","text":"<ol> <li>table Circle polygon</li> </ol>"},{"location":"esclib/funcs/draw/mask/","title":"esclib.draw:Mask","text":"<p>\ud83d\udfe7 Client</p> <pre><code>function esclib.draw:Mask(func, drawfunc, inverse, reference)\n</code></pre>"},{"location":"esclib/funcs/draw/mask/#arguments","title":"Arguments","text":"<ol> <li>function function</li> <li>function draw function</li> <li>bool inverse</li> <li>number reference</li> </ol>"},{"location":"esclib/funcs/draw/mask/#example","title":"Example","text":"<p>This example draws circle avatar <pre><code>function PANEL:Init()\n    self.vertices = 360\n    self.offset = 0\n    self.circle = esclib.draw:GenCircle(self:GetWide()*0.5, self:GetTall()*0.5, self:GetTall()*0.5-self.offset, self.vertices)\n    self.clr = Color(60,60,60,200)\n\n    self.avatar = self:Add(\"AvatarImage\")\n    local avatar = self.avatar\n    avatar:SetSize(self:GetWide(), self:GetTall())\n    avatar:SetPlayer(LocalPlayer(), 128)\nend\n\nfunction PANEL:Paint(w,h)\n    esclib.draw:Circle(w*0.5,h*0.5, h*0.5, self.clr)\n\n    esclib.draw:Mask(function()\n        draw.NoTexture()\n        surface.SetDrawColor(color_white)\n        surface.DrawPoly(self.circle)\n    end,\n    function()\n        self.avatar:SetPaintedManually(false)\n        self.avatar:PaintManual()\n        self.avatar:SetPaintedManually(true)\n    end)\nend\n</code></pre></p>"},{"location":"esclib/funcs/draw/material/","title":"esclib.draw:Material","text":"<p>\ud83d\udfe7 Client</p> <pre><code>function esclib.draw:Material(x,y,w,h,col,mat)\n</code></pre>"},{"location":"esclib/funcs/draw/material/#arguments","title":"Arguments","text":"<ol> <li>number x</li> <li>number y</li> <li>number wide</li> <li>number height</li> <li>color color</li> <li>material material</li> </ol>"},{"location":"esclib/funcs/draw/material_centered/","title":"esclib.draw:MaterialCentered","text":"<p>\ud83d\udfe7 Client</p> <pre><code>function esclib.draw:MaterialCentered(x,y,radius,col,mat)\n</code></pre>"},{"location":"esclib/funcs/draw/material_centered/#arguments","title":"Arguments","text":"<ol> <li>number x</li> <li>number y</li> <li>number radius</li> <li>color color</li> <li>material material</li> </ol>"},{"location":"esclib/funcs/draw/material_centered_rotated/","title":"esclib.draw:MaterialCenteredRotated","text":"<p>\ud83d\udfe7 Client</p> <pre><code>function esclib.draw:MaterialCenteredRotated(x,y,radius,rot,col,mat)\n</code></pre>"},{"location":"esclib/funcs/draw/material_centered_rotated/#arguments","title":"Arguments","text":"<ol> <li>number x</li> <li>number y</li> <li>number radius</li> <li>number rotation</li> <li>color color</li> <li>material material</li> </ol>"},{"location":"esclib/funcs/draw/material_centered_shadowed/","title":"esclib.draw:MaterialCenteredShadowed","text":"<p>\ud83d\udfe7 Client</p> <pre><code>function esclib.draw:MaterialCenteredShadowed(x,y,r,col,mat,offset, shadowcolor)\n</code></pre>"},{"location":"esclib/funcs/draw/material_centered_shadowed/#arguments","title":"Arguments","text":"<ol> <li>number x</li> <li>number y</li> <li>number radius</li> <li>color color</li> <li>material material</li> <li>number offset</li> <li>color shadow color</li> </ol>"},{"location":"esclib/funcs/draw/material_rotated/","title":"esclib.draw:MaterialRotated","text":"<p>\ud83d\udfe7 Client</p> <pre><code>function esclib.draw:MaterialRotated(x,y,w,h,rotation,color,material)\n</code></pre>"},{"location":"esclib/funcs/draw/material_rotated/#arguments","title":"Arguments","text":"<ol> <li>number x</li> <li>number y</li> <li>number wide</li> <li>number height</li> <li>number rotation</li> <li>color color</li> <li>material material</li> </ol>"},{"location":"esclib/funcs/draw/shadow_text/","title":"esclib.draw:ShadowText","text":"<p>\ud83d\udfe7 Client</p> <pre><code>function esclib.draw:ShadowText(text,font,px,py,col,textax,textay,offset,clr)\n</code></pre>"},{"location":"esclib/funcs/draw/shadow_text/#arguments","title":"Arguments","text":"<ol> <li>string text</li> <li>string font</li> <li>number position x</li> <li>number position y</li> <li>color text color</li> <li>text_align_enum text align x</li> <li>text_align_enum text align y</li> <li>number shadow offset</li> <li>color shadow color</li> </ol>"},{"location":"esclib/funcs/draw/surface_arc/","title":"esclib.draw:SurfaceArc","text":"<p>\ud83d\udfe7 Client</p> <pre><code>function esclib.draw:SurfaceArc(arc,vertices)\n</code></pre>"},{"location":"esclib/funcs/draw/surface_arc/#arguments","title":"Arguments","text":"<ol> <li>table arc</li> <li><code>Optional</code> number vertices</li> </ol>"},{"location":"esclib/funcs/file/makefile_if_not_exists/","title":"esclib.file:MakeIfNotExists","text":"<p>\ud83d\udfe7 Client / \ud83d\udfe6 Server</p> <pre><code>function esclib.file:MakeIfNotExists(path)\n</code></pre> <p>Creates a file if it does not exist</p>"},{"location":"esclib/funcs/file/makefile_if_not_exists/#arguments","title":"Arguments","text":"<ol> <li>string file path</li> </ol>"},{"location":"esclib/funcs/file/makefile_if_not_exists/#return","title":"Return","text":"<ol> <li>bool Is created?</li> </ol>"},{"location":"esclib/funcs/file/makefolder_if_not_exists/","title":"esclib.file:MakeDirectoriesIfNotExists","text":"<p>\ud83d\udfe7 Client / \ud83d\udfe6 Server</p> <pre><code>function esclib.file:MakeDirectoriesIfNotExists(path)\n</code></pre> <p>Creates a folders if it does not exist</p>"},{"location":"esclib/funcs/file/makefolder_if_not_exists/#arguments","title":"Arguments","text":"<ol> <li>string path</li> </ol>"},{"location":"esclib/funcs/file/makefolder_if_not_exists/#return","title":"Return","text":"<ol> <li>bool Is created?</li> </ol>"},{"location":"esclib/funcs/file/name_from_path/","title":"esclib.file:NameFromPath","text":"<p>\ud83d\udfe7 Client / \ud83d\udfe6 Server</p> <pre><code>function esclib.file:NameFromPath(path)\n</code></pre>"},{"location":"esclib/funcs/file/name_from_path/#arguments","title":"Arguments","text":"<ol> <li>string path</li> </ol>"},{"location":"esclib/funcs/file/name_from_path/#return","title":"Return","text":"<ol> <li>string filename</li> </ol>"},{"location":"esclib/funcs/file/read_var/","title":"esclib.file:ReadVar","text":"<p>\ud83d\udfe7 Client / \ud83d\udfe6 Server</p> <pre><code>function esclib.file:ReadVar(path, var)\n</code></pre> <p>Creates a file and saves table to it</p>"},{"location":"esclib/funcs/file/read_var/#arguments","title":"Arguments","text":"<ol> <li>string path</li> <li>string var to be readed</li> </ol>"},{"location":"esclib/funcs/file/read_var/#example","title":"Example","text":"<pre><code>esclib.file:SaveVar(\"ehud/savedvars.txt\",{[\"hello\"]={\"214151\",\"215161664\",\"\"}})\nprint(esclib.file:ReadVar(\"ehud/savedvars.txt\",\"hello\")) --{\"214151\",\"215161664\"}\n</code></pre>"},{"location":"esclib/funcs/file/save_var/","title":"esclib.file:SaveVar","text":"<p>\ud83d\udfe7 Client / \ud83d\udfe6 Server</p> <pre><code>function esclib.file:SaveVar(path,content)\n</code></pre> <p>Creates a file and saves table to it</p>"},{"location":"esclib/funcs/file/save_var/#arguments","title":"Arguments","text":"<ol> <li>string path</li> <li>table content</li> </ol>"},{"location":"esclib/funcs/file/save_var/#example","title":"Example","text":"<pre><code>esclib.file:SaveVar(\"ehud/savedvars.txt\",{[\"hello\"]={\"214151\",\"215161664\",\"\"}})\nprint(esclib.file:ReadVar(\"ehud/savedvars.txt\",\"hello\")) --{\"214151\",\"215161664\"}\n</code></pre>"},{"location":"esclib/funcs/text/capitalize/","title":"esclib.text:Capitalize","text":"<p>\ud83d\udfe7 Client</p> <pre><code>function esclib.text:Capitalize(str)\n</code></pre>"},{"location":"esclib/funcs/text/capitalize/#arguments","title":"Arguments","text":"<ol> <li>string str</li> </ol>"},{"location":"esclib/funcs/text/capitalize/#returns","title":"Returns","text":"<ul> <li>string CapitalizedString</li> </ul>"},{"location":"esclib/funcs/text/keyformat/","title":"esclib.text:KeyFormat","text":"<p>\ud83d\udfe7 Client</p> <pre><code>function esclib.text:KeyFormat(str, replacements)\n</code></pre>"},{"location":"esclib/funcs/text/keyformat/#arguments","title":"Arguments","text":"<ol> <li>string str</li> <li>table replacements</li> </ol>"},{"location":"esclib/funcs/text/keyformat/#returns","title":"Returns","text":"<ul> <li>string ReplacedString</li> </ul>"},{"location":"esclib/funcs/text/keyformat/#example","title":"Example","text":"<pre><code>local to_format_str = \"Hello {rank}\"\nlocal formated_str = esclib.text:KeyFormat(to_format_str, {\n    [\"rank\"] = \"MyUniqueRank\",\n})\nprint(formated_str) -- Will be Hello MyUniqueRank\n</code></pre>"},{"location":"esclib/funcs/text/multiline/","title":"Multiline strings","text":""},{"location":"esclib/funcs/text/multiline/#esclibtextmultiline","title":"esclib.text:Multiline","text":"<p>\ud83d\udfe7 Client</p> <pre><code>function esclib.text:Multiline(text, font, mWidth, interval)\n</code></pre>"},{"location":"esclib/funcs/text/multiline/#arguments","title":"Arguments","text":"<ol> <li>string text</li> <li>string font</li> <li>number MinimumWidth</li> <li>number IntervalBeetweenLines</li> </ol>"},{"location":"esclib/funcs/text/multiline/#returns","title":"Returns","text":"<ul> <li>table multiline_data</li> </ul> <p>Convert to string</p> <pre><code>function esclib.text:MultilineToString(multiline_data)\n</code></pre>"},{"location":"esclib/funcs/text/multiline/#draw-multiline-data","title":"Draw multiline data","text":"<p>\ud83d\udfe7 Client <pre><code>function esclib.text:DrawMultiline(multiline_data, x, y, color, alignX, alignY)\n</code></pre></p>"},{"location":"esclib/funcs/text/multiline/#arguments_1","title":"Arguments","text":"<ol> <li>table multiline_data</li> <li>number x</li> <li>number y</li> <li>color color</li> <li>text_align_enum alignX</li> <li>text_align_enum alignY</li> </ol> <p>To draw shadowed</p> <pre><code>function esclib.text:DrawMultilineShadow(multiline_data, x, y, color, alignX, alignY, offsetx)\n</code></pre>"},{"location":"esclib/funcs/util/draw_blur/","title":"esclib.util:DrawBlur","text":"<p>\ud83d\udfe7 Client</p> <pre><code>function esclib.util:DrawBlur(pnl,amount)\n</code></pre>"},{"location":"esclib/funcs/util/draw_blur/#arguments","title":"Arguments","text":"<ol> <li>panel panel</li> <li>number amount</li> </ol>"},{"location":"esclib/funcs/util/hex_to_clr/","title":"esclib.util:HexToColor","text":"<p>\ud83d\udfe7 Client</p> <pre><code>function esclib.util:HexToColor(hexString)\n</code></pre>"},{"location":"esclib/funcs/util/hex_to_clr/#arguments","title":"Arguments","text":"<ol> <li>string hexToBeConverted</li> </ol>"},{"location":"esclib/funcs/util/hex_to_clr/#returns","title":"Returns","text":"<ol> <li>color converted color</li> </ol>"},{"location":"esclib/funcs/util/nice_time/","title":"esclib.util:NiceTime","text":"<p>\ud83d\udfe7 Client</p> <pre><code>function esclib.util:NiceTime(time, bHours, bMinutes, bSeconds, bMilliseconds)\n</code></pre>"},{"location":"esclib/funcs/util/nice_time/#arguments","title":"Arguments","text":"<ol> <li>number time</li> <li>bool Need hours?</li> <li>bool Need minutes?</li> <li>bool Need seconds?</li> <li>bool Need milliseconds?</li> </ol>"},{"location":"esclib/funcs/util/nice_time/#returns","title":"Returns","text":"<ol> <li>string Formatted string</li> </ol>"},{"location":"esclib/funcs/util/number_limit/","title":"esclib.util:NumberLimit","text":"<p>\ud83d\udfe7 Client</p> <pre><code>function esclib.util:NumberLimit(number, min, max, str_format)\n</code></pre>"},{"location":"esclib/funcs/util/number_limit/#arguments","title":"Arguments","text":"<ol> <li>number number</li> <li>number minimum to be formated</li> <li>number maximum to be formated</li> <li><code>Optional</code> string format string</li> </ol>"},{"location":"esclib/funcs/util/number_limit/#returns","title":"Returns","text":"<ol> <li>string Formatted string</li> </ol>"},{"location":"esclib/funcs/util/number_limit/#example","title":"Example","text":"<pre><code>print(esclib.util:NumberLimit(500, 200, 300)) --will be 300+\nprint(esclib.util:NumberLimit(100, 200, 300)) --will be &lt;200\n</code></pre>"},{"location":"esclib/funcs/util/prechache_arc/","title":"esclib.util.PrecacheArc","text":"<p>\ud83d\udfe7 Client</p> <pre><code>function esclib.util.PrecacheArc(cx,cy,radius,thickness,startang,endang,roughness,rote)\n</code></pre>"},{"location":"esclib/funcs/util/prechache_arc/#arguments","title":"Arguments","text":"<ol> <li>number center x</li> <li>number center y</li> <li>number arc radius</li> <li>number start angle</li> <li>number end angle</li> <li>number roughness</li> <li>number rote</li> </ol>"},{"location":"esclib/funcs/util/prechache_arc/#returns","title":"Returns","text":"<ol> <li>table arc polygon</li> </ol>"},{"location":"esclib/funcs/util/restricted_symbols/","title":"esclib.util:IsRestrictedChar","text":"<p>\ud83d\udfe7 Client</p> <pre><code>function esclib.util:IsRestrictedChar(str)\n</code></pre>"},{"location":"esclib/funcs/util/restricted_symbols/#arguments","title":"Arguments","text":"<ol> <li>string string to check</li> </ol>"},{"location":"esclib/funcs/util/restricted_symbols/#returns","title":"Returns","text":"<ol> <li>bool Is restricted?</li> </ol>"},{"location":"esclib/funcs/util/restricted_symbols/#restricted-list","title":"Restricted list","text":"<pre><code>esclib.restricted_chars = {\n    [\"\\\\\"] = true,\n    [\"/\"] = true,\n    [\":\"] = true,\n    [\"*\"] = true,\n    [\"?\"] = true,\n    ['\"'] = true,\n    [\"'\"] = true,\n    [\"&lt;\"] = true,\n    [\"&gt;\"] = true,\n    [\"|\"] = true,\n    [\"CON\"] = true,\n    [\"PRN\"] = true,\n    [\"AUX\"] = true,\n    [\"NUL\"] = true,\n    [\"COM\"] = true,\n    [\"LPT\"] = true,\n}\n</code></pre>"},{"location":"esclib/funcs/util/round/","title":"esclib.util:Round","text":"<p>\ud83d\udfe7 Client</p> <pre><code>function esclib.util:Round(x)\n</code></pre>"},{"location":"esclib/funcs/util/round/#arguments","title":"Arguments","text":"<ol> <li>number Number to round</li> </ol>"},{"location":"esclib/funcs/util/round/#returns","title":"Returns","text":"<ol> <li>number Rounded number</li> </ol>"},{"location":"esclib/funcs/util/text_cut/","title":"esclib.util:TextCut","text":"<p>\ud83d\udfe7 Client</p> <pre><code>function esclib.util:TextCut(text,font, maxw, add_symbol)\n</code></pre> <p>Fast function, but may be unnacurate</p>"},{"location":"esclib/funcs/util/text_cut/#arguments","title":"Arguments","text":"<ol> <li>string text</li> <li>string font</li> <li>number maxw</li> <li>string symbol to add at end</li> </ol>"},{"location":"esclib/funcs/util/text_cut/#returns","title":"Returns","text":"<ol> <li>string Cutted text</li> </ol>"},{"location":"esclib/funcs/util/text_cut_accurate/","title":"esclib.util:TextCutAccurate","text":"<p>\ud83d\udfe7 Client</p> <pre><code>function esclib.util:TextCutAccurate(text,font, maxw, add_symbol)\n</code></pre>"},{"location":"esclib/funcs/util/text_cut_accurate/#arguments","title":"Arguments","text":"<ol> <li>string text</li> <li>string font</li> <li>number maxw</li> <li>string symbol to add at end</li> </ol>"},{"location":"esclib/funcs/util/text_cut_accurate/#returns","title":"Returns","text":"<ol> <li>string Cutted text</li> </ol>"},{"location":"esclib/funcs/util/text_on_bg/","title":"esclib.util:TextOnBG","text":"<p>\ud83d\udfe7 Client</p> <pre><code>function esclib.util:TextOnBG(bgCol, col_white, col_black)\n</code></pre>"},{"location":"esclib/funcs/util/text_on_bg/#arguments","title":"Arguments","text":"<ol> <li>color BackgroundColor</li> <li>color BrightColor</li> <li>color DarkColor</li> </ol>"},{"location":"esclib/funcs/util/text_on_bg/#returns","title":"Returns","text":"<ol> <li>color DecidedColor (<code>col_white</code> if <code>mean(bgCol)</code> &lt; <code>127</code> else <code>col_black</code>)</li> </ol>"},{"location":"esclib/funcs/util/text_size/","title":"esclib.util.GetTextSize","text":"<p>\ud83d\udfe7 Client</p> <pre><code>function esclib.util.GetTextSize(txt,font)\n</code></pre> <p>Similar with esclib.util:GetTextSize, but returns table</p>"},{"location":"esclib/funcs/util/text_size/#arguments","title":"Arguments","text":"<ol> <li>string text</li> <li>string font</li> </ol>"},{"location":"esclib/funcs/util/text_size/#returns","title":"Returns","text":"<ol> <li>table {w = wide, h = height}</li> </ol>"},{"location":"esclib/funcs/util/text_size2/","title":"esclib.util:GetTextSize","text":"<p>\ud83d\udfe7 Client</p> <pre><code>function esclib.util:GetTextSize(txt,font)\n</code></pre> <p>Similar with esclib.util:GetTextSize, but returns number</p>"},{"location":"esclib/funcs/util/text_size2/#arguments","title":"Arguments","text":"<ol> <li>string text</li> <li>string font</li> </ol>"},{"location":"esclib/funcs/util/text_size2/#returns","title":"Returns","text":"<ol> <li>number wide</li> <li>number height</li> </ol>"},{"location":"esclib/funcs/util/truncate_str/","title":"esclib.util:TruncateStr","text":"<p>\ud83d\udfe7 Client</p> <pre><code>function esclib.util:TruncateStr(str, maxLength)\n</code></pre>"},{"location":"esclib/funcs/util/truncate_str/#arguments","title":"Arguments","text":"<ol> <li>string string to be truncated</li> <li>number maximum symbols in string</li> </ol>"},{"location":"esclib/funcs/util/truncate_str/#returns","title":"Returns","text":"<ol> <li>string result string</li> </ol>"},{"location":"esclib/funcs/vgui/bg_clicker/","title":"esclib:GenerateBGClicker","text":"<p>\ud83d\udfe7 Client</p> <pre><code>function esclib:GenerateBGClicker(bool key_input)\n</code></pre>"},{"location":"esclib/funcs/vgui/bg_clicker/#arguments","title":"Arguments","text":"<ol> <li><code>bool</code> key_input</li> </ol>"},{"location":"esclib/funcs/vgui/bg_clicker/#returns","title":"Returns","text":"<ul> <li>panel GeneratedPanel</li> </ul>"},{"location":"esclib/funcs/vgui/choice_menu/","title":"esclib:ChoiceMenu","text":"<p>\ud83d\udfe7 Client</p> <pre><code>function esclib:ChoiceMenu(title,items,max_selections,item_paint,callback,custom_filter,need_search, selected_values)\n</code></pre>"},{"location":"esclib/funcs/vgui/choice_menu/#arguments","title":"Arguments","text":"<ol> <li>string  title</li> <li>table items</li> <li>bool | number max_selections</li> <li>function item_paint</li> <li>function callback( selected_item )</li> <li>function custom_filter</li> <li>bool need_search</li> <li>table selected_values - Already selected values</li> </ol>"},{"location":"esclib/funcs/vgui/choice_menu/#returns","title":"Returns","text":"<ul> <li>panel  GeneratedPanel</li> </ul>"},{"location":"esclib/funcs/vgui/confirm_window/","title":"esclib:ConfirmWindow","text":"<p>\ud83d\udfe7 Client</p> <pre><code>function esclib:ConfirmWindow(title, text, callback)\n</code></pre>"},{"location":"esclib/funcs/vgui/confirm_window/#arguments","title":"Arguments","text":"<ol> <li>string title</li> <li>string text</li> <li>function callback( bool Result )</li> </ol>"},{"location":"esclib/funcs/vgui/confirm_window/#returns","title":"Returns","text":"<ul> <li>panel  GeneratedPanel</li> </ul>"},{"location":"esclib/funcs/vgui/player_select/","title":"esclib:PlayerSelectWindow","text":"<p>\ud83d\udfe7 Client</p> <pre><code>function esclib:PlayerSelectWindow(title,multi,hide_self,callback,custom_filter)\n</code></pre>"},{"location":"esclib/funcs/vgui/player_select/#arguments","title":"Arguments","text":"<ol> <li>string title</li> <li>bool | number multi - Number to be selected</li> <li>bool hide_self</li> <li>function callback( selected_item )</li> <li>function custom_filter</li> </ol>"},{"location":"esclib/funcs/vgui/player_select/#returns","title":"Returns","text":"<ul> <li>panel GeneratedPanel</li> </ul>"},{"location":"esclib/funcs/vgui/text_input/","title":"esclib:TextInputWindow","text":"<p>\ud83d\udfe7 Client</p> <pre><code>function esclib:TextInputWindow(string title, string text, bool numeric, function callback)\n</code></pre>"},{"location":"esclib/funcs/vgui/text_input/#arguments","title":"Arguments","text":"<ol> <li>string title</li> <li>string text</li> <li>bool numeric</li> <li>function callback(string | number)</li> </ol>"},{"location":"esclib/funcs/vgui/text_input/#returns","title":"Returns","text":"<ul> <li>panel GeneratedPanel</li> </ul>"}]}